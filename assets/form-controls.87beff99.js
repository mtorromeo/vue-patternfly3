import{d as e,f as a,p as l}from"./index.2d8ee88c.js";const o={name:"form-controls-page",data:()=>({btnProps:e.props,btn:{name:"test",input:"radio",value:"foo",checkedValue:"foo",activeClass:"active",inactiveClass:"",disabled:!1,loose:!1},toggleProps:a.props,toggle:{name:"test",value:"foo",onText:"ON",onValue:"foo",onClass:"btn-success",offText:"OFF",offValue:"off",offClass:"btn-danger",disabled:!1,loading:!1,loose:!1,noOff:!1},comboboxProps:l.props,combobox:{name:"timezones",value:null,options:["Australian Central Daylight Savings Time","Australian Central Standard Time","Acre Time","ASEAN Common Time (unofficial)","Australian Central Western Standard Time (unofficial)","Atlantic Daylight Time","Australian Eastern Daylight Savings Time","Australian Eastern Standard Time","Afghanistan Time","Alaska Daylight Time","Alaska Standard Time","Alma-Ata Time[1]","Amazon Summer Time (Brazil)[2]","Amazon Time (Brazil)[3]","Armenia Time","Anadyr Time[4]","Aqtobe Time[5]","Argentina Time","Arabia Standard Time","Atlantic Standard Time","Australian Western Standard Time","Azores Summer Time","Azores Standard Time","Azerbaijan Time","Brunei Time","British Indian Ocean Time","Baker Island Time","Bolivia Time","Brasília Summer Time","Brasília Time","Bangladesh Standard Time","Bougainville Standard Time[6]","British Summer Time (British Standard Time from Feb 1968 to Oct 1971)","Bhutan Time","Central Africa Time","Cocos Islands Time","Central Daylight Time (North America)","Cuba Daylight Time[7]","Central European Summer Time (Cf. HAEC)","Central European Time","Chatham Daylight Time","Chatham Standard Time","Choibalsan Standard Time","Choibalsan Summer Time","Chamorro Standard Time","Chuuk Time","Clipperton Island Standard Time","Central Indonesia Time","Cook Island Time","Chile Summer Time","Chile Standard Time","Colombia Summer Time","Colombia Time","Central Standard Time (North America)","China Standard Time","Cuba Standard Time","China Time","Cape Verde Time","Central Western Standard Time (Australia) unofficial","Christmas Island Time","Davis Time","Dumont d'Urville Time","AIX-specific equivalent of Central European Time[NB 1]","Easter Island Summer Time","Easter Island Standard Time","East Africa Time","Eastern Caribbean Time (does not recognise DST)","Ecuador Time","Eastern Daylight Time (North America)","Eastern European Summer Time","Eastern European Time","Eastern Greenland Summer Time","Eastern Greenland Time","Eastern Indonesian Time","Eastern Standard Time (North America)","Further-eastern European Time","Fiji Time","Falkland Islands Summer Time","Falkland Islands Time","Fernando de Noronha Time","Galápagos Time","Gambier Islands Time","Georgia Standard Time","French Guiana Time","Gilbert Island Time","Gambier Island Time","Greenwich Mean Time","South Georgia and the South Sandwich Islands Time","Gulf Standard Time","Guyana Time","Hawaii–Aleutian Daylight Time","Heure Avancée d'Europe Centrale French-language name for CEST","Hawaii–Aleutian Standard Time","Hong Kong Time","Heard and McDonald Islands Time","Hovd Summer Time (not used from 2017-present)","Hovd Time","Indochina Time","International Day Line West time zone","Israel Daylight Time","Indian Ocean Time","Iran Daylight Time","Irkutsk Time","Iran Standard Time","Indian Standard Time","Irish Standard Time[8]","Israel Standard Time","Japan Standard Time","Kaliningrad Time","Kyrgyzstan Time","Kosrae Time","Krasnoyarsk Time","Korea Standard Time","Lord Howe Standard Time","Lord Howe Summer Time","Line Islands Time","Magadan Time","Marquesas Islands Time","Mawson Station Time","Mountain Daylight Time (North America)","Middle European Time Same zone as CET","Middle European Summer Time Same zone as CEST","Marshall Islands Time","Macquarie Island Station Time","Marquesas Islands Time","Myanmar Standard Time","Moscow Time","Malaysia Standard Time","Mountain Standard Time (North America)","Mauritius Time","Maldives Time","Malaysia Time","New Caledonia Time","Newfoundland Daylight Time","Norfolk Island Time","Novosibirsk Time [9]","Nepal Time","Newfoundland Standard Time","Newfoundland Time","Niue Time","New Zealand Daylight Time","New Zealand Standard Time","Omsk Time","Oral Time","Pacific Daylight Time (North America)","Peru Time","Kamchatka Time","Papua New Guinea Time","Phoenix Island Time","Philippine Time","Pakistan Standard Time","Saint Pierre and Miquelon Daylight Time","Saint Pierre and Miquelon Standard Time","Pohnpei Standard Time","Pacific Standard Time (North America)","Philippine Standard Time","Paraguay Summer Time[10]","Paraguay Time[11]","Réunion Time","Rothera Research Station Time","Sakhalin Island Time","Samara Time","South African Standard Time","Solomon Islands Time","Seychelles Time","Samoa Daylight Time","Singapore Time","Sri Lanka Standard Time","Srednekolymsk Time","Suriname Time","Samoa Standard Time","Singapore Standard Time","Showa Station Time","Tahiti Time","Thailand Standard Time","French Southern and Antarctic Time[12]","Tajikistan Time","Tokelau Time","Timor Leste Time","Turkmenistan Time","Turkey Time","Tonga Time","Tuvalu Time","Ulaanbaatar Summer Time","Ulaanbaatar Standard Time","Coordinated Universal Time","Uruguay Summer Time","Uruguay Standard Time","Uzbekistan Time","Venezuelan Standard Time","Vladivostok Time","Volgograd Time","Vostok Station Time","Vanuatu Time","Wake Island Time","West Africa Summer Time","West Africa Time","Western European Summer Time","Western European Time","Western Indonesian Time","Western Standard Time","Yakutsk Time","Yekaterinburg Time"],placeholder:"Pick a timezone",disabled:!1,required:!1,tabindex:"0",labelField:"label",valueField:"id",withCheckbox:!1}})},t=window.Vue.createElementVNode,n=window.Vue.createTextVNode,i=window.Vue.toDisplayString,d=window.Vue.resolveComponent,m=window.Vue.withCtx,s=window.Vue.createVNode,u=window.Vue.openBlock,r=window.Vue.createElementBlock,c=window.Vue.createCommentVNode,b=window.Vue.createStaticVNode,T={class:"page"},g=t("header",null,[t("h1",null,[n("RadioButton "),t("code",null,"<pf-radio-button>")])],-1),p=t("p",null,[n("This button can be used for radio or checkbox form inputs that have to be represented by a clickable button. Place multiple buttons bound to the same variable to have them synchronize their status. If you set the "),t("code",null,"input"),n("prop to "),t("code",null,"checkbox"),n(" the value is treated as an array that contains the values of all the checked buttons.")],-1),h={class:"demo-container"},f=n(" Click me for baz! "),V=n(" Click me for bar! "),v=t("h3",null,"Slots",-1),S=t("table",{class:"table table-striped table-hover"},[t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Description")])]),t("tbody",null,[t("tr",null,[t("td",null,"default"),t("td",null,"Button label")])])],-1),x=t("header",null,[t("h1",null,[n("Toggle "),t("code",null,"<pf-toggle>")])],-1),C=t("p",null,"This is a two-state button with hidden form controls.",-1),k={class:"demo-container"},w=n(" Toggle me! "),y={key:0},A=n(" Toggle me! "),U={key:1},I=n(" Toggle me! "),N=t("h3",null,"Slots",-1),E=t("table",{class:"table table-striped table-hover"},[t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Description")])]),t("tbody",null,[t("tr",null,[t("td",null,"default"),t("td",null,"Toggle label")])])],-1),D=t("header",null,[t("h1",null,[n("ComboBox "),t("code",null,"<pf-combo-box>")])],-1),F=t("p",null,"This is a two-state button with hidden form controls.",-1),O={class:"demo-container"},B=b('<h3>Slots</h3><table class="table table-striped table-hover"><thead><tr><th>Name</th><th>Description</th><th>Scope properties</th></tr></thead><tbody><tr><td>default</td><td>Option template</td><td><code>option</code>: the option to render</td></tr></tbody></table>',2);o.render=function(e,a,l,o,b,P){const M=d("pf-radio-button"),z=d("props-row"),q=d("props-table"),G=d("pf-toggle"),W=d("pf-combobox");return u(),r("article",T,[g,t("section",null,[p,t("div",h,[s(M,{modelValue:b.btn.value,"onUpdate:modelValue":a[0]||(a[0]=e=>b.btn.value=e),name:b.btn.name,"checked-value":b.btn.checkedValue,"active-class":b.btn.activeClass,"inactive-class":b.btn.inactiveClass,input:b.btn.input,disabled:b.btn.disabled,loose:b.btn.loose},{default:m((()=>[n(" Click me for "+i(b.btn.checkedValue)+"! ",1)])),_:1},8,["modelValue","name","checked-value","active-class","inactive-class","input","disabled","loose"]),s(M,{modelValue:b.btn.value,"onUpdate:modelValue":a[1]||(a[1]=e=>b.btn.value=e),name:b.btn.name,"checked-value":"baz","active-class":b.btn.activeClass,"inactive-class":b.btn.inactiveClass,input:b.btn.input,disabled:b.btn.disabled,loose:b.btn.loose},{default:m((()=>[f])),_:1},8,["modelValue","name","active-class","inactive-class","input","disabled","loose"]),s(M,{modelValue:b.btn.value,"onUpdate:modelValue":a[2]||(a[2]=e=>b.btn.value=e),name:b.btn.name,"checked-value":"bar","active-class":b.btn.activeClass,"inactive-class":b.btn.inactiveClass,input:b.btn.input,disabled:b.btn.disabled,loose:b.btn.loose},{default:m((()=>[V])),_:1},8,["modelValue","name","active-class","inactive-class","input","disabled","loose"])]),s(q,{"component-props":b.btnProps},{default:m((()=>[s(z,{modelValue:b.btn.name,"onUpdate:modelValue":a[3]||(a[3]=e=>b.btn.name=e),name:"name",description:"Input name."},null,8,["modelValue"]),s(z,{modelValue:b.btn.input,"onUpdate:modelValue":a[4]||(a[4]=e=>b.btn.input=e),name:"input",description:"Type of input.",options:["radio","checkbox","none"]},null,8,["modelValue"]),s(z,{modelValue:b.btn.value,"onUpdate:modelValue":a[5]||(a[5]=e=>b.btn.value=e),name:"value",description:"Actual value."},null,8,["modelValue"]),s(z,{modelValue:b.btn.checkedValue,"onUpdate:modelValue":a[6]||(a[6]=e=>b.btn.checkedValue=e),name:"checkedValue",description:"Value to match to consider the radio/checkbox as checked."},null,8,["modelValue"]),s(z,{modelValue:b.btn.activeClass,"onUpdate:modelValue":a[7]||(a[7]=e=>b.btn.activeClass=e),name:"activeClass",description:"Button class for active state."},null,8,["modelValue"]),s(z,{modelValue:b.btn.inactiveClass,"onUpdate:modelValue":a[8]||(a[8]=e=>b.btn.inactiveClass=e),name:"inactiveClass",description:"Button class for inactive state."},null,8,["modelValue"]),s(z,{modelValue:b.btn.disabled,"onUpdate:modelValue":a[9]||(a[9]=e=>b.btn.disabled=e),name:"disabled",description:"Disabled state."},null,8,["modelValue"]),s(z,{modelValue:b.btn.loose,"onUpdate:modelValue":a[10]||(a[10]=e=>b.btn.loose=e),name:"loose",description:"Use loose value matching."},null,8,["modelValue"])])),_:1},8,["component-props"]),v,S]),x,t("section",null,[C,t("div",k,[t("p",null,[s(G,{modelValue:b.toggle.value,"onUpdate:modelValue":a[11]||(a[11]=e=>b.toggle.value=e),name:b.toggle.name,"on-value":b.toggle.onValue,"off-value":b.toggle.offValue,"on-text":b.toggle.onText,"on-class":b.toggle.onClass,"off-text":b.toggle.offText,"off-class":b.toggle.offClass,disabled:b.toggle.disabled,loading:b.toggle.loading,loose:b.toggle.loose,"no-off":b.toggle.noOff},{default:m((()=>[w])),_:1},8,["modelValue","name","on-value","off-value","on-text","on-class","off-text","off-class","disabled","loading","loose","no-off"])]),b.toggle.noOff?(u(),r("p",y,[s(G,{modelValue:b.toggle.value,"onUpdate:modelValue":a[12]||(a[12]=e=>b.toggle.value=e),name:b.toggle.name,"on-value":"bar","off-value":!1,"on-text":b.toggle.onText,"on-class":b.toggle.onClass,"off-text":b.toggle.offText,"off-class":b.toggle.offClass,disabled:b.toggle.disabled,loading:b.toggle.loading,loose:b.toggle.loose,"no-off":b.toggle.noOff},{default:m((()=>[A])),_:1},8,["modelValue","name","on-text","on-class","off-text","off-class","disabled","loading","loose","no-off"])])):c("",!0),b.toggle.noOff?(u(),r("p",U,[s(G,{modelValue:b.toggle.value,"onUpdate:modelValue":a[13]||(a[13]=e=>b.toggle.value=e),name:b.toggle.name,"on-value":"baz","off-value":!1,"on-text":b.toggle.onText,"on-class":b.toggle.onClass,"off-text":b.toggle.offText,"off-class":b.toggle.offClass,disabled:b.toggle.disabled,loading:b.toggle.loading,loose:b.toggle.loose,"no-off":b.toggle.noOff},{default:m((()=>[I])),_:1},8,["modelValue","name","on-text","on-class","off-text","off-class","disabled","loading","loose","no-off"])])):c("",!0)]),s(q,{"component-props":b.toggleProps},{default:m((()=>[s(z,{modelValue:b.toggle.name,"onUpdate:modelValue":a[14]||(a[14]=e=>b.toggle.name=e),name:"name",description:"Input name."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.value,"onUpdate:modelValue":a[15]||(a[15]=e=>b.toggle.value=e),name:"value",description:"Actual value."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.onText,"onUpdate:modelValue":a[16]||(a[16]=e=>b.toggle.onText=e),name:"onText",description:"Label for the ON button."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.onValue,"onUpdate:modelValue":a[17]||(a[17]=e=>b.toggle.onValue=e),name:"onValue",description:"Value to use when the toggle is turned to ON."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.onClass,"onUpdate:modelValue":a[18]||(a[18]=e=>b.toggle.onClass=e),name:"onClass",description:"Class for the ON button."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.offText,"onUpdate:modelValue":a[19]||(a[19]=e=>b.toggle.offText=e),name:"offText",description:"Label for the OFF button."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.offValue,"onUpdate:modelValue":a[20]||(a[20]=e=>b.toggle.offValue=e),name:"offValue",description:"Value to use when the toggle is turned to OFF."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.offClass,"onUpdate:modelValue":a[21]||(a[21]=e=>b.toggle.offClass=e),name:"offClass",description:"Class for the OFF button."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.disabled,"onUpdate:modelValue":a[22]||(a[22]=e=>b.toggle.disabled=e),name:"disabled",description:"Disabled state."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.loading,"onUpdate:modelValue":a[23]||(a[23]=e=>b.toggle.loading=e),name:"loading",description:"Loading state. Useful to apply while asynchronously submitting the change of state."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.loose,"onUpdate:modelValue":a[24]||(a[24]=e=>b.toggle.loose=e),name:"loose",description:"Use loose value matching."},null,8,["modelValue"]),s(z,{modelValue:b.toggle.noOff,"onUpdate:modelValue":a[25]||(a[25]=e=>b.toggle.noOff=e),name:"noOff",description:"Do not assign any value when the toggle is OFF. By using multiple <code>pf-toggle</code>s the binded value is an Array of all the toggles set to ON."},null,8,["modelValue"])])),_:1},8,["component-props"]),N,E]),D,t("section",null,[F,t("div",O,[t("p",null,[s(W,{modelValue:b.combobox.value,"onUpdate:modelValue":a[26]||(a[26]=e=>b.combobox.value=e),name:b.combobox.name,options:b.combobox.options,placeholder:b.combobox.placeholder,disabled:b.combobox.disabled,required:b.combobox.required,tabindex:b.combobox.tabindex,"label-field":b.combobox.labelField,"value-field":b.combobox.valueField,"with-checkbox":b.combobox.withCheckbox},null,8,["modelValue","name","options","placeholder","disabled","required","tabindex","label-field","value-field","with-checkbox"])])]),s(q,{"component-props":b.comboboxProps},{default:m((()=>[s(z,{modelValue:b.combobox.name,"onUpdate:modelValue":a[27]||(a[27]=e=>b.combobox.name=e),name:"name",description:"Input name."},null,8,["modelValue"]),s(z,{modelValue:b.combobox.value,"onUpdate:modelValue":a[28]||(a[28]=e=>b.combobox.value=e),name:"value",description:"Actual value."},null,8,["modelValue"]),s(z,{modelValue:b.combobox.options,"onUpdate:modelValue":a[29]||(a[29]=e=>b.combobox.options=e),name:"options",description:"Array of Strings or Objects representing the available options to pick from.",code:""},null,8,["modelValue"]),s(z,{modelValue:b.combobox.placeholder,"onUpdate:modelValue":a[30]||(a[30]=e=>b.combobox.placeholder=e),name:"placeholder",description:"Text placeholder for the combobox input element."},null,8,["modelValue"]),s(z,{modelValue:b.combobox.disabled,"onUpdate:modelValue":a[31]||(a[31]=e=>b.combobox.disabled=e),name:"disabled",description:"Disabled state."},null,8,["modelValue"]),s(z,{modelValue:b.combobox.required,"onUpdate:modelValue":a[32]||(a[32]=e=>b.combobox.required=e),name:"required",description:"Required state."},null,8,["modelValue"]),s(z,{modelValue:b.combobox.tabindex,"onUpdate:modelValue":a[33]||(a[33]=e=>b.combobox.tabindex=e),name:"tabindex",description:"Tabindex of the input element."},null,8,["modelValue"]),s(z,{modelValue:b.combobox.labelField,"onUpdate:modelValue":a[34]||(a[34]=e=>b.combobox.labelField=e),name:"labelField",description:"If the options' items are Objects, use this field for the label."},null,8,["modelValue"]),s(z,{modelValue:b.combobox.valueField,"onUpdate:modelValue":a[35]||(a[35]=e=>b.combobox.valueField=e),name:"valueField",description:"If the options' items are Objects, use this field for the value."},null,8,["modelValue"]),s(z,{name:"match",description:"Custom function to match the combobox filter to the options."}),s(z,{name:"highlight",description:"Custom function to highlight the part of the options that matches the filter."}),s(z,{modelValue:b.combobox.withCheckbox,"onUpdate:modelValue":a[36]||(a[36]=e=>b.combobox.withCheckbox=e),name:"withCheckbox",description:"Add a checkbox to enable/disable the combobox. If it's a string, the checkbox will have a name that can be submitted with a form."},null,8,["modelValue"])])),_:1},8,["component-props"]),B])])};export{o as default};
