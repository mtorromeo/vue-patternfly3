const e={name:"get-started-page",data:()=>({htmlSample:'\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <link rel="stylesheet" href="https://unpkg.com/patternfly/dist/css/patternfly.min.css">\n    <link rel="stylesheet" href="https://unpkg.com/patternfly/dist/css/patternfly-additions.min.css">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n  </head>\n  <body>\n    <div id="app"></div>\n    <script src="https://unpkg.com/vue@3/dist/vue.global.js"><\/script>\n    <script src="https://unpkg.com/vue-router@4/dist/vue-router.global.js"><\/script>\n    <script type="module" src="/src/main.js"><\/script>\n  </body>\n</html>\n',jsSample:"import 'vue-patternfly/vue-patternfly.css';\n\nimport { createApp } from 'vue';\nimport { createRouter, createWebHashHistory } from 'vue-router';\nimport VuePatternfly from 'vue-patternfly';\nimport App from './App.vue';\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes: [\n    {\n      path: '/',\n      component: () => import('./pages/home.vue'),\n    },\n    {\n      path: '/get-started',\n      component: () => import('./pages/get-started.vue'),\n    },\n  ],\n});\n\nconst app = createApp(App);\napp.config.unwrapInjectedRef = true;\napp.use(VuePatternfly);\napp.use(router);\napp.mount('#app');\n",viteSample:"import { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  // you can optionally choose to externalize (some of) your dependencies\n  // make sure to include the scripts in your index.html\n  rollupOptions: {\n    external: ['vue', 'vue-router'],\n    output: {\n      globals: {\n        vue: 'Vue',\n        'vue-router': 'VueRouter',\n      },\n    },\n  },\n  plugins: [vue()],\n});\n",appSample:'<template>\n  <pf-layout>\n    <template #brand>\n      <router-link to="/" :exact="true" class="navbar-brand navbar-brand-name">\n        My Vue App\n      </router-link>\n    </template>\n\n    <template #utility-menu>\n      <pf-dropdown tag="li" btn-class="nav-item-iconic" type="link">\n        <template #text>\n          <pf-icon name="pficon-user" />\n          John Doe\n        </template>\n\n        <li>\n          <a href="#">Logout</a>\n        </li>\n      </pf-dropdown>\n    </template>\n\n    <template #horizontal-menu>\n      <pf-menu-item\n        to="/"\n        exact\n        title="Home"\n      />\n\n      <pf-menu-item\n        to="/get-started"\n        exact\n        title="Get Started"\n      />\n    </template>\n\n    <pf-notifications ref="notifications" toast />\n\n    <router-view />\n  </pf-layout>\n</template>\n\n<script>\nexport default {\n  methods: {\n    toast(message, type) {\n      return this.$refs.notifications.add(message, type);\n    },\n  },\n};\n<\/script>\n'})},t=window.Vue.createElementVNode,n=window.Vue.createTextVNode,a=window.Vue.toDisplayString,l=window.Vue.openBlock,o=window.Vue.createElementBlock,p={class:"page"},r=t("header",null,[t("h1",null,"Get Started")],-1),i=t("p",null,[n("The example configuration provided below makes use of "),t("a",{href:"https://vitejs.dev/guide/why.html",target:"_blank"},"Vite"),n(".")],-1),s=t("h2",null,"Installation",-1),u=t("pre",null,[t("code",null,"yarn create vite my-vue-app --template vue\nyarn add -D vue-patternfly")],-1),c=t("h3",null,"/vite.config.js",-1),m=["textContent"],d=t("h3",null,"/index.html",-1),f=["textContent"],h=t("h3",null,"/src/main.js",-1),v=["textContent"],g=t("h3",null,"/src/App.vue",-1),y=["textContent"];e.render=function(e,n,x,w,b,k){return l(),o("article",p,[r,t("section",null,[i,s,u,c,t("pre",null,[t("code",{class:"lang-javascript",textContent:a(b.viteSample)},null,8,m)]),d,t("pre",null,[t("code",{class:"lang-html",textContent:a(b.htmlSample)},null,8,f)]),h,t("pre",null,[t("code",{class:"lang-javascript",textContent:a(b.jsSample)},null,8,v)]),g,t("pre",null,[t("code",{class:"lang-html",textContent:a(b.appSample)},null,8,y)])])])};export{e as default};
